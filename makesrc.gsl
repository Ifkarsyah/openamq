.for root.package
.  echo "Generating makesrc-$(name)-$(release).sh"
.  output "makesrc-$(name)-$(release).sh"
#!/bin/sh
#
#  makesrc-$(name)-$(release).sh
#

croak() {
    if [ -n "$*" ]; then
        echo "makesrc E: $* Stop." 1>&2
    else
        echo "makesrc E: Stop." 1>&2
    fi
    exit 1
}
carp() {
    echo "makesrc I: $*" 1>&2
}
trap 'croak "Interrupted."' INT
trap 'croak "Terminated."' TERM
trap 'croak "Quit."' QUIT

if [ -z "$1" ]; then
    carp "Usage: makesrc WORKDIR"
    exit 1
fi

if [ -z "`which boom`" ]; then
    croak "Need \\"boom\\" on $PATH to run."
fi
if [ -z "`which pax`" ]; then
    croak "Need \\"pax\\" on $PATH to run."
fi
if [ -z "`which zip`" ]; then
    croak "Need \\"zip\\" on $PATH to run."
fi

WORKDIR="$1"                            #  Working directory
if [ ! -d $WORKDIR ]; then
    mkdir -p $WORKDIR || croak
fi
cd $WORKDIR
WORKDIR=`pwd`
PKGROOT=$WORKDIR/$(name:)-$(release:)

.  for product
carp "Checking out $(name:) (rev $(rev:)) as $WORKDIR/products/$(name:c)..."
svn co -q -r $(rev:) $(url:) $WORKDIR/products/$(name:c) || croak

carp "Preparing $(name:) sources..."
cd $WORKDIR/products/$(name:c) || croak
rm -f *.tar.gz *.zip
boom configure || croak
boom clean distsrc || croak
$(name:c)_version=`boom version`
if [ -z "\$$(name:c)_version" ]; then
    croak "Unable to determine version of $(name)."
fi
.  endfor

carp "Building $(name:) $(release:) full package..."
mkdir $PKGROOT || croak
cat <<EOF >$PKGROOT/build.sh
#!/bin/sh
#  Build and install $(name:) $(release:) and dependent products
#  Set the IBASE variable to the installation directory

if [ -z "\\$IBASE" ]; then
    echo "The IBASE environment variable is not defined."
    echo "Set this to desired installation directory, e.g. \\\\$HOME/ibase."
    echo "Then, add \\\\$IBASE/bin to your PATH for best results."
    exit 1
fi

EOF

.  for product
cat <<EOF >>$PKGROOT/build.sh
cd \$$(name:c)_version
if ! sh ./boomake build test install; then
    echo "E: Build of $(name) failed" 1>&2
    exit 1
fi
cd ..
EOF
.  endfor

cat <<EOF >>$PKGROOT/build.sh
echo "Finished building and installing $(name) $(release)."
EOF

cd $PKGROOT
.  for product
gzip -dc $WORKDIR/products/$(name:c)/\${$(name:c)_version}-src.tar.gz | tar -xf - || croak
.  endfor

cd $WORKDIR
pax -w $(name:)-$(release:) | gzip -c > ${PKGROOT}.tar.gz || croak
zip -lqrm ${PKGROOT}.zip $(name:)-$(release:) || croak
carp "Successfully built the following packages in $WORKDIR:"
ls -l $(name:)-$(release:).tar.gz $(name:)-$(release:).zip
.endfor
