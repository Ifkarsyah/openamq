<root>
    <machine name = "global">
        <event name = "init">
        </event>
        <event name = "create connection">
            <arg type = "const char *" name = "server"/>
            <arg type = "const char *" name = "host"/>
            <arg type = "const char *" name = "client_name"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "remove connection">
            <arg type = "connection_t" name = "connection"/>
        </event>
        <event name = "assign new channel id">
            <arg type = "apr_uint16_t *" name = "channel_id"/>
        </event>
        <event name = "assign new handle id">
            <arg type = "apr_uint16_t *" name = "handle_id"/>
        </event>
        <event name = "terminate">
            <arg type = "lock_t *" name = "lock"/>
        </event>

        <constructor action = "do construct"/>
        <destructor action = "do destruct"/>

        <state name = "initial">
            <event name = "init" action = "do init" next = "active"/>
        </state>
        <state name = "active">
            <event name = "create connection" action = "do create connection"/>
            <event name = "remove connection" action = "do remove connection"/>
            <event name = "assign new channel id" action = "do assign new channel id"/>
            <event name = "assign new handle id" action = "do assign new handle id"/>
        </state>
        <state name = "closing">
            <event name = "terminate" action = "do duplicate terminate"/>
        </state>
        <state name = "terminal">
        </state>
        <state name = "default">
            <event name = "terminate" action = "do terminate" next = "closing"/>
        </state>
    </machine>

    <machine name = "connection">
        <event name = "init">
            <arg type = "global_t" name = "global"/>
            <arg type = "apr_uint16_t" name = "connection_id"/>
            <arg type = "const char *" name = "server"/>
            <arg type = "const char *" name = "host"/>
            <arg type = "const char *" name = "client_name"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name ="lock"/>
        </event>
        <event name = "challenge">
        </event>
        <event name = "tune">
        </event>
        <event name = "create channel">
            <arg type = "apr_byte_t" name = "transacted"/>
            <arg type = "apr_byte_t" name = "restartable"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "remove channel">
            <arg type = "channel_t" name = "channel"/>
        </event>
        <event name = "reply">
            <arg type = "apr_uint16_t" name = "confirm_tag"/>
            <arg type = "apr_uint16_t" name = "reply_code"/>
            <arg type = "const char *" name = "reply_text"/>
        </event>
        <event name = "terminate">
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "close">
        </event>

        <constructor action = "do construct"/>
        <destructor action = "do destruct"/>

        <state name = "initial">
            <event name = "init" action = "do init" next = "expect challenge"/>
        </state>
        <state name = "expect challenge">
            <event name = "challenge" action = "do challenge" next = "expect tune"/>
        </state>
        <state name = "expect tune">
            <event name = "tune" action = "do tune" next = "active"/>
        </state>
        <state name = "active">
            <event name = "create channel" action = "do create channel"/>
            <event name = "remove channel" action = "do remove channel"/>
            <event name = "reply" action = "do reply"/>
        </state>
        <state name = "expect close">
            <event name = "terminate" action = "do duplicate terminate"/>
            <event name = "close" action = "do client requested close" next = "terminal"/>
        </state>
        <state name = "terminal">
        </state>
        <state name = "default">
            <event name = "terminate" action = "do terminate" next = "expect close"/>
            <event name = "close" action = "do server requested close" next = "terminal"/>
        </state>
    </machine>

    <machine name = "channel">
        <event name = "init">
            <arg type = "global_t" name = "global"/>
            <arg type = "connection_t" name = "connection"/>
            <arg type = "apr_socket_t *" name = "socket"/>
            <arg type = "apr_uint16_t" name = "connection_id"/>
            <arg type = "apr_uint16_t" name = "channel_id"/>
            <arg type = "apr_byte_t" name = "transacted"/>
            <arg type = "apr_byte_t" name = "restartable"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "create handle">
            <arg type = "apr_uint16_t" name = "service_type"/>
            <arg type = "apr_byte_t" name = "producer"/>
            <arg type = "apr_byte_t" name = "consumer"/>
            <arg type = "apr_byte_t" name = "browser"/>
            <arg type = "apr_byte_t" name = "temporary"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "const char *" name = "encoding"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "created_lock"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "remove handle">
            <arg type = "handle_t" name = "handle"/>
        </event>
        <event name = "acknowledge">
            <arg type = "apr_uint32_t" name = "message_nbr"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "commit">
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "rollback">
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "reply">
            <arg type = "apr_uint16_t" name = "confirm_tag"/>
            <arg type = "apr_uint16_t" name = "reply_code"/>
            <arg type = "const char *" name = "reply_text"/>
        </event>
        <event name = "terminate">
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "close">
        </event>

        <constructor action = "do construct"/>
        <destructor action = "do destruct"/>

        <state name = "initial">
            <event name = "init" action = "do init" next = "active"/>
        </state>
        <state name = "active">
            <event name = "create handle" action = "do create handle"/>
            <event name = "remove handle" action = "do remove handle"/>
            <event name = "acknowledge" action = "do acknowledge"/>
            <event name = "commit" action = "do commit"/>
            <event name = "rollback" action = "do rollback"/>
            <event name = "reply" action = "do reply"/>
        </state>
        <state name = "expect close">
            <event name = "terminate" action = "do duplicate terminate"/>
            <event name = "close" action = "do client requested close" next = "terminal"/>
        </state>
        <state name = "terminal">
        </state>
        <state name = "default">
            <event name = "terminate" action = "do terminate" next = "expect close"/>
            <event name = "close" action = "do server requested close" next = "terminal"/>
        </state>
    </machine>

    <machine name = "handle">
        <event name = "init">
            <arg type = "global_t" name = "global"/>
            <arg type = "channel_t" name = "channel"/>
            <arg type = "apr_socket_t *" name = "socket"/>
            <arg type = "apr_uint16_t" name = "connection_id"/>
            <arg type = "apr_uint16_t" name = "channel_id"/>
            <arg type = "apr_uint16_t" name = "handle_id"/>
            <arg type = "apr_uint16_t" name = "service_type"/>
            <arg type = "apr_byte_t" name = "producer"/>
            <arg type = "apr_byte_t" name = "consumer"/>
            <arg type = "apr_byte_t" name = "browser"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "const char *" name = "encoding"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "init temporary">
            <arg type = "global_t" name = "global"/>
            <arg type = "channel_t" name = "channel"/>
            <arg type = "apr_socket_t *" name = "socket"/>
            <arg type = "apr_uint16_t" name = "channel_id"/>
            <arg type = "apr_uint16_t" name = "handle_id"/>
            <arg type = "apr_uint16_t" name = "service_type"/>
            <arg type = "apr_byte_t" name = "producer"/>
            <arg type = "apr_byte_t" name = "consumer"/>
            <arg type = "apr_byte_t" name = "browser"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "const char *" name = "encoding"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "created_lock"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "created">
            <arg type = "const char *" name = "dest_name"/>
        </event>
        <event name = "consume">
            <arg type = "apr_uint16_t" name = "prefetch"/>
            <arg type = "apr_byte_t" name = "no_local"/>
            <arg type = "apr_byte_t" name = "unreliable"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "identifier"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "send message">
            <arg type = "apr_byte_t" name = "out_of_band"/>
            <arg type = "apr_byte_t" name = "recovery"/>
            <arg type = "apr_byte_t" name = "streaming"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "apr_byte_t" name = "persistent"/>
            <arg type = "apr_byte_t" name = "priority"/>
            <arg type = "apr_uint32_t" name = "expiration"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "const char *" name = "encoding"/>
            <arg type = "const char *" name = "identifier"/>
            <arg type = "apr_size_t" name = "data_size"/>
            <arg type = "void *" name = "data"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "get message">
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "receive message">
            <arg type = "amqp_frame_t *" name = "message"/>
        </event>
        <event name = "flow">
            <arg type = "apr_byte_t" name = "pause"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "cancel">
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "identifier"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "unget">
            <arg type = "apr_uint32_t" name = "message_nbr"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "query">
            <arg type = "apr_uint32_t" name = "message_nbr"/>
            <arg type = "const char *" name = "dest_name"/>
            <arg type = "const char *" name = "mime_type"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "index">
            <arg type = "apr_uint32_t" name = "message_nbr"/>
            <arg type = "const char *" name = "message_list"/>
        </event>
        <event name = "browse">
            <arg type = "apr_uint32_t" name = "message_nbr"/>
            <arg type = "apr_byte_t" name = "async"/>
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "reply">
            <arg type = "apr_uint16_t" name = "confirm_tag"/>
            <arg type = "apr_uint16_t" name = "reply_code"/>
            <arg type = "const char *" name = "reply_text"/>
        </event>
        <event name = "terminate">
            <arg type = "lock_t *" name = "lock"/>
        </event>
        <event name = "close">
        </event>

        <constructor action = "do construct"/>
        <destructor action = "do destruct"/>

        <state name = "initial">
            <event name = "init" action = "do init" next = "active"/>
            <event name = "init temporary" action = "do init temporary" next = "expect created"/>
        </state>
        <state name = "expect created">
            <event name = "created" action = "do created" next = "active"/>
        </state>
        <state name = "active">
            <event name = "consume" action = "do consume"/>
            <event name = "send message" action = "do send message"/>
            <event name = "get message" action = "do get message"/>
            <event name = "receive message" action = "do receive message"/>
            <event name = "flow" action = "do flow"/>
            <event name = "cancel" action = "do cancel"/>
            <event name = "unget" action = "do unget"/>
            <event name = "query" action = "do query"/>
            <event name = "index" action = "do index"/>
            <event name = "browse" action = "do browse"/>
        </state>
        <state name = "expect close">
            <event name = "terminate" action = "do duplicate terminate"/>
            <event name = "close" action = "do client requested close" next = "terminal"/>
        </state>
        <state name = "terminal">
        </state>
        <state name = "default">
            <event name = "reply" action = "do reply"/>
            <event name = "terminate" action = "do terminate" next = "expect close"/>
            <event name = "close" action = "do server requested close" next = "terminal"/>
        </state>
    </machine>
</root>
