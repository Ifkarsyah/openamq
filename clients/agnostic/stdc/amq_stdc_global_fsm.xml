<root script = "amq_stdc_fsms">

<machine name = "global_fsm" output = "amq_stdc_global_fsm">
    Holds global state of the API

    <constructor action = "do construct"/>
    <destructor action = "do destruct"/>

    <event name = "init">
        Request to initialise the API
    </event>
    <event name = "create connection">
        Request to create new connection
        <arg type = "const char *" name = "server">
             Server to connect to, IP address or name
        </arg>
        <arg type = "dbyte" name = "port">
             Server port to use
        </arg>
        <arg type = "const char *" name = "host">
             Virtual host to connect to
        </arg>
        <arg type = "const char *" name = "client_name">
             Client name to use to connect to server
        </arg>
        <arg type = "amq_stdc_table_t" name = "options">
             Options to be passed to CONNECTION OPEN command
        </arg>
        <arg type = "byte" name = "async">
             When 1, don't wait for confirmation from server
        </arg>
        <arg type = "connection_fsm_t *" name = "out">
             Connection created
        </arg>
        <arg type = "amq_stdc_lock_t *" name = "lock">
             Output parameter, to be used to wait for operation completion
        </arg>
    </event>
    <event name = "remove connection">
        Request to remove connection from global list of connections
        <arg type = "connection_fsm_t" name = "connection">
            Connection to remove
        </arg>
    </event>
    <event name = "assign new channel id">
        Request to assign new channel id
        <arg type = "dbyte *" name = "channel_id">
            Output parameter, new channel id
        </arg>
    </event>
    <event name = "assign new handle id">
        Request to assign new handle id
        <arg type = "dbyte *" name = "handle_id">
            Output parameter, new handle id
        </arg>
    </event>
    <event name = "terminate">
        Request to shut down the API
        <arg type = "amq_stdc_lock_t *" name = "lock">
             Output parameter, to be used to wait for operation completion                
        </arg>
    </event>

    <state name = "initial">
        State API is in before it is initialised
        <event name = "init" action = "do init" next = "active"/>
    </state>
    <state name = "active">
        API initialised and functional
        <event name = "create connection" action = "do create connection"/>
        <event name = "remove connection" action = "do remove connection"/>
        <event name = "assign new channel id" action = "do assign new channel id"/>
        <event name = "assign new handle id" action = "do assign new handle id"/>
    </state>
    <state name = "closing">
        API shutting down
        <event name = "terminate" action = "do duplicate terminate"/>
    </state>
    <state name = "terminal">
        API already shut down
    </state>
    <state name = "default">
        Default state
        <event name = "terminate" action = "do terminate" next = "closing"/>
    </state>
</machine>

</root>
