.#  GSL script to produce readme.txt, build.sh and build.bat
.#  Uses a full manifest.xml file
.#  This script should be put into the ibase-boot bootstrap
.#
.for root.package
.   output "readme.txt"
This is the $(name:) $(release:) source distribution. To build the package
run the command:

    sh build.sh

Under Linux/Unix, and under Windows, run this command from a console window:

    build

You will need MSVC installed for command line use. Please see www.openamq.org
for more details.
.   output "build.sh"

#!/bin/sh
#  Build and install $(name:) $(release:) and dependent products

#  Set the IBASE variable to the installation directory
if [ -z "\$IBASE" ]; then
    echo 'The IBASE environment variable is not defined.'
    echo 'Set this to desired installation directory, e.g. \$HOME/ibase.'
    echo 'Then, add \$IBASE/bin to your PATH for best results.'
    exit 1
fi
.  for product

#   Build $(name:)
cd $(name:)
sh ./boomake build
test $BOOM_NOTEST || sh ./boomake test
sh ./boomake install;
if [ \$? != 0 ]; then
    echo "E: Build of $(name:) failed" 1>&2
    exit 1
fi
cd ..
.endfor

#   Done successfully
echo "Finished building and installing $(name:) $(release:)."
.#
.   output "build.bat"
@echo off
:-  Build and install $(name:) $(release:) and dependent products

:-  Set the IBASE variable to the installation directory
if "%IBASE%"=="" (
    echo The IBASE environment variable is not defined.
    echo Set this to desired installation directory, e.g. c:\ibase.
    echo Then, add ^%IBASE^%/bin to your PATH for best results.
    exit /b 1
)
.  for product

:-  Build $(name:)
cd $(name:)
call boomake build test install
if errorlevel 1 (
    echo E: Build of $(name:) failed
    exit /b 1
)
cd ..
.  endfor

:-  Done successfully
echo Finished building and installing $(name:) $(release:).
.endfor

