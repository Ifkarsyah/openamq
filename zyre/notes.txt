- implement joins
    OK
- catch duplicate joins
    OK
- catch other errors during configuration
    OK
- default join from all pipes to default feed




JSON parser in C
new XML parser that is known solid

synchronization with AMQP
    - what feeds come from OpenAMQ:
        - shared queues -> feedname
        - all exchanges
    - when AMQP provides feed,
        - create in restms object if new


new resource from openamq
    always public resource
    always locked


AMQP synchronization
    - resource->private property

Rainey
    - JPMC, DJ followup
    - AMQP WG meetings each week: attend, report
    - follow issues on openamq.org
    - assist at FOSDEM
    - logo for X5
    - black t-shirts for X5 & FOSDEM

zyre_content class
    content_type
    content_encoding
    bucket (limit content to 2MB for now)
        overflow to file, later
        limitation needs to be documented


- in openamq, synchronize back with zyre
    - add method Feed.Sync to class
    - if server gets this, syncs all exchange & shared queues back to RestMS




    - zyre_resource_new (table,


- handle in zyre_restms class:
    Domain  GET POST (feed, pipe)
    Feed    GET PUT DELETE POST (message)
    Pipe    GET PUT DELETE POST (join)
    Join    GET PUT DELETE
    Message GET DELETE
    Content GET DELETE




define pipe that sends messages back to feed
    - allows proxy selection, macroisation

define fair queue mechanism that takes input from several feeds but fairly
    - implement natively in openamq?
    - ...?



Implement exchange logic in zyre and do federation

config
    amqp server name
    amqp server login and password
    client logins
        - basic auths
        - not same as openamq credentials


RESTful extensions to AMQP
    - RestMS protocol class
    - * in topics matches empty routing-key
    - empty topic segments are allowed (".value")

