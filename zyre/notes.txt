- multiple messages
    <message ... />
- no content, headers only
    <message ...>
        <content href="{staged content uri}" />
    </message>
- if no such content, 404
- else deletes content on sending
    <message ...>
        <content type="{mime type}" encoding="{text encoding}">content body</content>
    </message>
- document message sending & receiving in detail
- document use case for RestMS
- document: server MAY decode content before sending if encoding is "base64"
    The Base16, Base32, and Base64 Data Encodings
    http://tools.ietf.org/html/rfc4648


feed->send (message)
message = pipe->recv (message)


tests
    pipe
        - send message and check we can get it back
    feed

content
    -> received from server GET
    -> sent to server for PUT
    -> $self->content
    -> $self->content_type


- multiple messages
my $content = <<EOF;
<restms>
  <message address="address.multi.1" message_id="ID1">
    <header name="serial-number" value="0001" />
    <content>It's too cold</content>
  </message>
  <message address="address.multi.2" message_id="ID2">
    <header name="serial-number" value="0002" />
    <content>It's too hot</content>
  </message>
  <message address="address.multi.3" message_id="ID3">
    <header name="message_id" value="ID3" />
    <header name="serial-number" value="0003" />
    <content>It's just right!</content>
  </message>
</restms>
EOF
$restms->raw ("POST", "/restms/feed/default", $content);


how to know next asynclet?
    - next is always next in list
    - get pipe, children, and next...?



    message = restms->recv (pipe)
    restms->feed->send (message)
    message->new ()


need to learn GIT and make gitub for restms work
    - specs, sample code
    - addons
    restms.org


live.zyre.com

zyre.com
    - documentation
    - examples
    - binaries, packages


JSON parser in C
new XML parser that is known solid

synchronization with AMQP
    - what feeds come from OpenAMQ:
        - shared queues -> feedname
        - all exchanges
    - when AMQP provides feed,
        - create in restms object if new


new resource from openamq
    always public resource
    always locked

- in openamq, synchronize back with zyre
    - add method Feed.Sync to class
    - if server gets this, syncs all exchange & shared queues back to RestMS



AMQP synchronization
    - resource->private property

Rainey
    - JPMC, DJ followup
    - AMQP WG meetings each week: attend, report
    - follow issues on openamq.org
    - assist at FOSDEM
    - logo for X5
    - black t-shirts for X5 & FOSDEM

zyre_content class
    content_type
    content_encoding
    bucket (limit content to 2MB for now)
        overflow to file, later
        limitation needs to be documented


define pipe that sends messages back to feed
    - allows proxy selection, macroisation

define fair queue mechanism that takes input from several feeds but fairly
    - implement natively in openamq?
    - ...?



Implement exchange logic in zyre and do federation

config
    amqp server name
    amqp server login and password
    client logins
        - basic auths
        - not same as openamq credentials


RESTful extensions to AMQP
    - RestMS protocol class
    - * in topics matches empty routing-key
    - empty topic segments are allowed (".value")

