- implement joins
- catch duplicate joins
- report duplicate join
- catch other errors during configuration
- create default feed
- default join from all pipes to default feed
- filter default feed & joins in backend
- pipe report joins
    OK
- RestMS class needs to fix error handling
    OK


- message class
    - address
    - reply_to
    - list of contents
    - feed (originating)

- post to feed
    - create content and send immediately to backend
    - do not create a message
    - send immediately to back-end
    - no creation of resource

how to handle multiple contents in one message:
    - send as separate messages
    - collect & normalise as single message again

post content
    type + body
server responds with
    XML body
can stage many contents

    <message ... />

    <message ...>
        <content href="{staged content uri}" />
    </message>

    <message ...>
        <content type="{mime type}" encoding="{text encoding}">content body</content>
    </message>

delete content OK
    - done automatically too

get content from feed
    if know URI

need to learn GIT and make gitub for restms work
    - specs, sample code
    - addons
    restms.org

zyre.com
    - documentation
    - examples
    - binaries, packages


JSON parser in C
new XML parser that is known solid

synchronization with AMQP
    - what feeds come from OpenAMQ:
        - shared queues -> feedname
        - all exchanges
    - when AMQP provides feed,
        - create in restms object if new


new resource from openamq
    always public resource
    always locked

- in openamq, synchronize back with zyre
    - add method Feed.Sync to class
    - if server gets this, syncs all exchange & shared queues back to RestMS



AMQP synchronization
    - resource->private property

Rainey
    - JPMC, DJ followup
    - AMQP WG meetings each week: attend, report
    - follow issues on openamq.org
    - assist at FOSDEM
    - logo for X5
    - black t-shirts for X5 & FOSDEM

zyre_content class
    content_type
    content_encoding
    bucket (limit content to 2MB for now)
        overflow to file, later
        limitation needs to be documented


define pipe that sends messages back to feed
    - allows proxy selection, macroisation

define fair queue mechanism that takes input from several feeds but fairly
    - implement natively in openamq?
    - ...?



Implement exchange logic in zyre and do federation

config
    amqp server name
    amqp server login and password
    client logins
        - basic auths
        - not same as openamq credentials


RESTful extensions to AMQP
    - RestMS protocol class
    - * in topics matches empty routing-key
    - empty topic segments are allowed (".value")

