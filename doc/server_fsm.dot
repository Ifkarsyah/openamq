//  Build using fdp
digraph {
    size = "8,8";
    subgraph master {
        initialise_master -> new_connection;
        new_connection -> new_connection;
    }
    subgraph client {
        initialise_connection -> expect_connection_response;
        initialise_connection -> initialise_connection;
        initialise_connection -> connection_active;
        expect_connection_response -> expect_connection_tune;
        expect_connection_response -> expect_connection_response;
        expect_connection_response -> connection_active;
        expect_connection_tune -> expect_connection_tune;
        expect_connection_tune -> connection_active;
        connection_active -> connection_active;
        connection_active -> have_channel_open;
        connection_active -> have_channel_method;
        connection_active -> have_channel_close;
        connection_active -> have_handle_open;
        connection_active -> have_handle_method;
        connection_active -> have_handle_send;
        connection_active -> have_handle_prepare;
        connection_active -> have_handle_close;
        have_channel_open -> connection_active;
        have_channel_open -> have_channel_open;
        have_channel_method -> have_channel_method;
        have_channel_method -> connection_active;
        have_channel_close -> have_channel_close;
        have_channel_close -> connection_active;
        have_handle_open -> connection_active;
        have_handle_open -> have_handle_open;
        have_handle_method -> have_handle_method;
        have_handle_method -> connection_active;
        have_handle_send -> have_handle_send;
        have_handle_send -> after_handle_send;
        have_handle_send -> connection_active;
        after_handle_send -> expect_handle_send;
        after_handle_send -> connection_active;
        after_handle_send -> after_handle_send;
        expect_handle_send -> after_handle_send;
        expect_handle_send -> connection_active;
        expect_handle_send -> expect_handle_send;
        have_handle_prepare -> have_handle_prepare;
        have_handle_prepare -> after_handle_send;
        have_handle_prepare -> connection_active;
        have_handle_close -> have_handle_close;
        have_handle_close -> connection_active;
        sending_message -> sending_message;
        sending_message -> connection_active;
    }
}
