#! /bin/sh 
#
#   AMQP conformance tests
#
#   This script runs the AMQP conformance tests.


function die() {
    echo "E: $@"
    echo "I: aborting conformance tests"
    exit -1
}

if [ "$IBASE" = "" ]; then
    die "IBASE not set"
fi

if [ "$COLOR" = "no" ]; then
    unset GREEN RED RESET
else
    GREEN=$'\e[32;02m'
    RED=$'\e[31;02m'
    YELLOW=$'\e[33;01m'
    RESET=$'\e[37;00m'
fi

if [ -e works.pal ] && [ -e fails.pal ]; then
    echo "initializing ..."
    if [ "works.pal" -nt "works" ]; then
        pal works.pal &>/dev/null
    fi
    ./works &>/dev/null || die "could not initialise (positive test failed)"

    if [ "fails.pal" -nt "fails" ]; then
        pal fails.pal &>/dev/null
    fi
    ./fails &>/dev/null && die "could not initialise (negative test failed)"
else
    echo "no works/fails pal scripts found... continuing w/o initial test"
fi


for testcase in `ls *.pal|grep -v amq_test_base.pal|grep -v works.pal|grep -v fails.pal`; do
    DESC=`cat $testcase|grep desc|perl -ne 's/^\s*desc\s*=\s"(.*?)"/$1/; print $_'`
    COMP=" "
    if [ $testcase -nt ${testcase%%.pal} ]; then
        pal $testcase &>/dev/null 
        if [ $? -eq 0 ]; then 
            COMP=" (${YELLOW}compiling OK$RESET) "
        else
            COMP=" (${RED}compile FAILED$RESET) "
        fi
    fi

    `./${testcase%%.pal} &>/dev/null`
    if [ $? -eq 0 ]; then
        STAT="[ $GREEN OK $RESET ]"
    else
        STAT="[$RED FAIL $RESET]"
    fi
    
    echo "$STAT $testcase:$COMP$DESC... "
    # only temporary solution, pal needs to make sure the server is down
    killall -9 amq_server &>/dev/null
done

