<page
    name = "admin"
    title = "Administration"
    subtitle = "Look After your Deployment"
    >
<content type = "gurudoc">

Monitoring a Server
*******************

There are several ways to monitor a running OpenAMQ server process:

 1. Using the operating systems' process monitoring tools.

 2. Using the OpenAMQ Console ('amq_shell'), described below.

 3. Using the server's own monitoring output.

The simplest way is to run the server using the --dump_state option,
as follows:

    amq_server --dump_state 5

You can redirect the output to a log file, and monitor the log file.

Using the OpenAMQ Console
*************************

Principles
==========

The amq_shell provides a command-line administration tool for OpenAMQ.
You can use this tool by hand, or automatically in shell scripts.  Normal
OpenAMQ users can view information; super users can also change the server's
state, e.g. killing blocked connections or over-full queues.

Console Command Line
====================

Run this command:

    amq_shell -u !username! -p !password!

These are the command-line options:

  -s hostname      Broker hostname and :port (localhost)

If the amq_server is running on a different system and/or non-standard port,
use the -s option to specify the correct !servername:port!.

  -V virtualhost   Specify cluster virtual host

You need this when working with servers that are in a cluster configuration.
The cluster virtual host you specify must match that specified in the cluster
configuration.

  -u user          User name for console access (guest)

Specify the user name for the connection.

  -p password      Password for console access (guest)

Specify the password for the connection.

  -e "commands"    Run shell commands, delimited by ;

Specify a list of commands to run, which can be any commands that you may
type when in the amq_shell prompt (see below).

  -x filename      Save all status data as XML

Saves all printed data as an XML file, useful if you want to re-process the
data mechanically afterwards.

  -t level         Set trace level (default = 0)

Used to debug the communications between the Console and the OpenAMQ server.

  -b               Show broker status and then exit

Show a summary of the broker status, without entering the prompt.

  -r               Report all active local brokers

Scan the current system for all OpenAMQ brokers running on ports 4096 to
8192.  Will not attempt to look for brokers above or below that range.

  -q               Show all broker queues and exit

Show a summary list of all the broker's queues, without entering the prompt.

  -c               Show all broker connections and exit

Show a summary list of all the broker's connections, without entering the prompt.

  -d               Show date and time in shell output

Add the date and time to all printed messages.

The Console Prompt
==================

When the Console connects successfully to the default or specified OpenAMQ
server it will display a prompt so that you can enter commands:

    amq_shell/1.0c0 - Management Console for OpenAMQ Brokers
    Copyright (c) 2004-2006 JPMorganChase

    Connected to OpenAMQ Server/1.0c0 on 192.168.55.64:5672

    0) broker = "OpenAMQ 1.0c0"
    Date, time broker started ............. 1970-00-01T00:05+00:00
    Broker is locked? ..................... No
    Memory used for all data .............. 10128K
    Memory used for messages .............. 0K
    Number of queued messages ............. 1
    Number of message exchanges ........... 7
    Number of message queues .............. 1
    Number of queue consumers ............. 1
    Number of queue bindings .............. 2
    Number of virtual hosts ............... 1
    Number of connections ................. 1
    [shutdown] [lock] [shake]
    1) vhost = "/"
    11) connection = "0-1" address="localhost (127.0.0.1:50976)" -
        instance="amq_shell" traffic_in=0 traffic_out=0
    10) cluster = "Standalone" ready=No master=No
    9) config = "amq_server.cfg"
    Type item number to see details, or [cmd]
    /192.168.55.64:5672>

Note that:

 * The available actions are listed in square brackets.  For example when
   you are looking at a broker these are the available actions:

    [shutdown] [lock] [shake]

 * Type 'help' at any prompt to get explanations.  These commands are
   available at all times:

    Command            Has this effect
    -------            -------------------
    ls | dir           Show broker and all children
    nnn                Look at item [nnn] (nnn is a number)
    ?text              Look at item matching text
    /                  Return to broker item
    .                  Refresh current item
    ..                 Move back to previous item
    set name value     Set object property
    help               Show this text
    exit | quit        Leave the OpenAMQ shell

Custom Consoles
===============

OpenAMQ provides tools and standards to let you develop your own consoles
in Java, Perl, Python, and other languages.  See the OpenAMQ Console API
specification.

Administration FAQ
******************

 - !What do I need to check for when I manage a server?! Answer: mainly,
   CPU usage and memory consumption.

 - !Does OpenAMQ work with [insert random monitoring tool here]!? Answer:
   it is easy to write scripts to monitor OpenAMQ servers from most
   monitoring tools.

</content>
</page>
