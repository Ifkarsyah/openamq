<page name = "features">
<language name = "en">
<title>Features</title>
<subtitle>openamq principal features</subtitle>
<content>

OpenAMQ Features
****************

The OpenAMQ server implements this principal functionality:

 - Create and manage named or unnamed message queues.
 - Create and manage exchanges.
 - Fanout and direct exchanges (point-to-point messaging).
 - Topic hierarchy exchange (publish/subscribe).
 - Header matching exchanges (content based routing).
 - Basic content messages of zero bytes up to 4Gb.
 - Multiple readers per queue with round-robin dispatching
 - Asynchonous message publishing and dispatching.
 - Shared queues and exclusive private queues.
 - Configurable limits on queues and memory.
 - SASL authentication (PLAIN mechanism).
 - Configuration via XML configuration files or command-line.
 - Clustering for load-balancing and fail-over.
 - Remote administration and configuration (amq_shell).
 - Configurable client-server heartbeating.
 - Includes full test client (amq_client).
 - Multilevel logging (error, daily, debug) with automatic cycling.
 - PAL scripting language for automation and testing.
 - Automatic flow control for heavy publishers.

These functions are not yet implemented:

 - Persistent messages and transactions.
 - Synchronous consumers (explicity acknowledgements).
 - Encryption.
 - Server access controls.

The WireAPI client implements this principal functionality:

 - Support for all methods defined in the AMQP standard.
 - Asynchronous background message delivery.
 - Error reporting to applications.
 - Currently available for C and C++.

Technical Features
******************

The OpenAMQ server has these technical features:

 - Both single-threaded and multi-threaded versions available.
 - Portable to Linux, Windows, Solaris, and other POSIX systems.
 - Low-latency, high-throughput communications design.
 - Single binary (amq_server).
 - Automatic background operation (Unix, Linux only).
 - Configurable TCP/IP parameters (timeouts, buffers).
 - Configurable OS footprint (number of threads).

The WireAPI clients have these technical features:

 - Both single-threaded and multi-threaded versions available.
 - Portable to Linux, Windows, Solaris, and other POSIX systems.
 - Low-latency, high-throughput communications design.
 - Connection heartbeating (multithreaded clients only).
 - Configurable TCP/IP parameters (timeouts, buffers).

Coming Next
***********

This functionality is planned and/or in progress:

 - Secure SASL authentication mechanisms.
 - TLS/SSL Encryption.
 - User and group access controls.
 - Persistent messages and transactions.
 - WireAPI clients for Perl, Python, PHP, Ruby.

</content>
</language>
</page>
