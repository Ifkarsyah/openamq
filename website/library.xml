<page name = "library">
<language name = "en">
<title>Documentation</title>
<subtitle>catalogue of on-line documentation</subtitle>
<content>

Documentation Library
*********************

AMQ Background and Concepts (Detailed)
......................................

This is a general introduction to AMQ, intended for a technically-minded
readership. It explains the basic AMQ concepts, and goes into medium
detail on all significant aspects of the architecture and technology.

- [/doc/concepts.html:HTML framed]
- [/doc/concepts_flat.html:HTML flat]
- [/doc/concepts.pdf:PDF]

The AMQP/Fast Wire-Level Protocol v0.9 draft
............................................

We propose a wire-level protocol and a set of formal semantics for building
large scale and high-performance middleware architectures.  AMQP/0.9 is the
third major design iteration of the AMQ protocol.

- [/doc/protocol.html:HTML framed] 
- [/doc/protocol_flat.html:HTML flat] 
- [/doc/protocol.pdf:PDF]

Installation and Use of the OpenAMQ Server
..........................................

OpenAMQ is a reference implementation of the AMQ middleware protocol
(AMQP). It provides a high-speed message provider along with clients for
various platforms and languages.  This document provides a guide to
installing and using the OpenAMQ server (v0.8).

- [/doc/server.html:HTML framed]
- [/doc/server_flat.html:HTML flat]
- [/doc/server.pdf:PDF]

AMQ RFC001 - The OpenAMQ RFC System
...................................

The OpenAMQ RFC system is modelled on existing RFC systems.  Our goal is
to create a light-weight but useful basis for capturing the discussions,
proposals, and implementations behind key aspects of the OpenAMQ product.
This document defines the OpenAMQ RFC system itself.

- [/doc/amq_rfc001.html:HTML framed]
- [/doc/amq_rfc001_flat.html:HTML flat]
- [/doc/amq_rfc001.pdf:PDF]

AMQ RFC002 - Coding Standards
.............................

This document describes the ANSI C coding standards that are used in the
OpenAMQ project.

- [/doc/amq_rfc002.html:HTML framed]
- [/doc/amq_rfc002_flat.html:HTML flat]
- [/doc/amq_rfc002.pdf:PDF]

AMQ RFC003 - Rapid Message Matching
...................................

This document describes a matching algorithm that provides all the
functionality needed for topic matching and most of the functionality
needed for content-based routing.

- [/doc/amq_rfc003.html:HTML framed]
- [/doc/amq_rfc003_flat.html:HTML flat]
- [/doc/amq_rfc003.pdf:PDF]

AMQ RFC006 - The AMQP/Fast Wire-Level Protocol v0.8
...................................................

We propose a wire-level protocol and a set of formal semantics for building
large scale and high-performance middleware architectures.  AMQP/0.8 is the
second major design iteration of the AMQ protocol.

- [/doc/amq_rfc006.html:HTML framed] 
- [/doc/amq_rfc006_flat.html:HTML flat] 
- [/doc/amq_rfc006.pdf:PDF]

AMQ RFC011 - AMQP Reply Codes
.............................

This document defines the standard set of 3-digit reply codes used by AMQ
implementations including OpenAMQ.  The reply codes are based on the IETF
standard model as described in IETF RFC2821 and RFC2822.

- [/doc/amq_rfc011.html:HTML framed]
- [/doc/amq_rfc011_flat.html:HTML flat]
- [/doc/amq_rfc011.pdf:PDF]

AMQ RFC014 - AMQP Agnostic Client Design
......................................

We propose a language agnostic design for an AMQP/Fast client.  The intent
is that client implementors will use this document as a basic design for
implementing AMQP/Fast wire protocol clients in any language.  The design
is built in a bottom-up fasion, starting with a low level wrapper around
the wire protocol, and building up progressively higher levels of
abstraction.

- [/doc/amq_rfc014.html:HTML framed]
- [/doc/amq_rfc014_flat.html:HTML flat]
- [/doc/amq_rfc014.pdf:PDF]

AMQ RFC015 - AMQ Client Component API
......................................

We define a single platform- and language-independent standard API for AMQ
client components.  By standardising the API for AMQP client components we
reduce the workload both for the AMQP client component developers, and for
their users, who need to learn only a single API.

- [/doc/amq_rfc015.html:HTML framed]
- [/doc/amq_rfc015_flat.html:HTML flat]
- [/doc/amq_rfc015.pdf:PDF]

</content>
</language>
</page>
