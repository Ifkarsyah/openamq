<?xml?>
<pdl
    name      = "OpenAMQJ - JMS Client"
    acronym   = "openamqj"
    version   = "0.3b1"
    copyright = "Copyright (c) 2004-2005 JPMorgan"
    workflow  = "standard.pwl"
    deploy    = "openamqj"
 >

<include filename = "prelude.pdl" />

<file name = "build.xml" class = "private resource"  >ANT build file</file>

<!-- These are the JAR files that provide the JMS interface -->
<directory name = "dist" class = "shared library">
    <file name = "openamqj-jms.jar"                  >JMS layer</file>
    <file name = "openamqj-common.jar"               >JMS layer</file>
    <file name = "openamqj-tests.jar"                >JMS layer</file>
</directory>

<!-- Build dependencies -->
<directory name = "build" class = "private resource">
    <file name = "asl_chassis_java.gsl"              >Java ASL chassis</file>
</directory>

<!-- Required libraries -->
<directory name = "lib/jms"  class = "public binary">
    <file name = "jms.jar"                           >Compiled JMS interfaces</file>
</directory>
<directory name = "lib/mina" class = "public binary">
    <file name = "mina-0.7.3.jar"                   />
</directory>
<directory name = "lib/logging-log4j" class = "public binary">
    <file name = "log4j-1.2.9.jar"                  />
</directory>
<directory name = "lib/jakarta-commons" class = "public binary">
    <file name = "commons-collections-3.1.jar"      />
</directory>
<directory name = "lib/util-concurrent" class = "public binary">
    <file name = "backport-util-concurrent.jar"     />
</directory>

<!-- Common classes -->
<directory name = "common/src/org/openamq" class = "private resource">
    <file name = "AMQChannelClosedException.java"    />
    <file name = "AMQConnectionClosedException.java" />
    <file name = "AMQDisconnectedException.java"     />
    <file name = "AMQException.java"                 />
    <file name = "AMQUndeliveredException.java"      />
</directory>

<!-- Common framing classes, hand written -->
<directory name = "common/src/org/openamq/framing" class = "private resource">
    <file name = "AMQBody.java"                      />
    <file name = "AMQDataBlockDecoder.java"          />
    <file name = "AMQDataBlockEncoder.java"          />
    <file name = "AMQDataBlock.java"                 />
    <file name = "AMQFrameDecodingException.java"    />
    <file name = "AMQFrame.java"                     />
    <file name = "AMQMessage.java"                   />
    <file name = "AMQMethodBodyFactory.java"         />
    <file name = "AMQMethodBody.java"                />
    <file name = "BodyFactory.java"                  />
    <file name = "CompositeAMQDataBlock.java"        />
    <file name = "ContentBodyFactory.java"           />
    <file name = "ContentBody.java"                  />
    <file name = "ContentHeaderBodyFactory.java"     />
    <file name = "ContentHeaderBody.java"            />
    <file name = "EncodableAMQDataBlock.java"        />
    <file name = "EncodingUtils.java"                />
    <file name = "FieldTable.java"                   />
    <file name = "JmsContentHeaderBody.java"         />
    <file name = "ProtocolInitiation.java"           />
</directory>

<!-- Framing classes generated from ASL -->
<directory name = "common/generated/java/org/openamq/framing" class = "generated">
    <file name = "*.java"                           />
</directory>

<!-- JMS API - Basic classes -->
<directory name = "client/src/org/openamq/client" class = "private resource">
    <file name = "AMQConnectionFactory.java"     />
    <file name = "AMQConnection.java"            />
    <file name = "AMQSession.java"               />
    <file name = "AMQMessageConsumer.java"       />
    <file name = "AMQMessageProducer.java"       />
    <file name = "AMQDestination.java"           />
    <file name = "AMQQueue.java"                 />
    <file name = "AMQTopic.java"                 />
    <file name = "ConnectionTuneParameters.java" />
    <file name = "Closeable.java"                />
    <file name = "IdFactory.java"                />
</directory>

<!-- JMS API - Message classes -->
<directory name = "client/src/org/openamq/client/message" class = "private resource">
    <file name = "MessageFactoryRegistry.java"      />
    <file name = "AMQTextMessageFactory.java"       />
    <file name = "AMQTextMessage.java"              />
    <file name = "MessageFactory.java"              />
    <file name = "AbstractMessageFactory.java"      />
    <file name = "AbstractMessage.java"             />
    <file name = "UnprocessedMessage.java"          />
</directory>

<!-- JMS API - Method handlers -->
<directory name = "client/src/org/openamq/client/handler" class = "private resource">
    <file name = "ConnectionStartMethodHandler.java"  />
    <file name = "ConnectionSecureMethodHandler.java" />
    <file name = "ConnectionTuneMethodHandler.java"   />
    <file name = "ConnectionOpenOkMethodHandler.java" />
    <file name = "ConnectionCloseMethodHandler.java"  />
    <file name = "ChannelCloseMethodHandler.java"     />
    <file name = "JmsBounceMethodHandler.java"        />
    <file name = "JmsDeliverMethodHandler.java"       />
</directory>

<!-- JMS API - Protocol & state -->
<directory name = "client/src/org/openamq/client/protocol" class = "private resource">
    <file name = "AMQProtocolSession.java"          />
    <file name = "AMQProtocolHandler.java"          />
    <file name = "AMQMethodEvent.java"              />
    <file name = "AMQMethodListener.java"           />
    <file name = "BlockingMethodFrameListener.java" />
    <file name = "AMQConstant.java"                 />
</directory>
<directory name = "client/src/org/openamq/client/state"  class = "private resource">
    <file name = "AMQStateManager.java"             />
    <file name = "AMQState.java"                    />
    <file name = "AMQStateChangedEvent.java"        />
    <file name = "StateAwareMethodListener.java"    />
    <file name = "AMQStateListener.java"            />
    <file name = "StateListener.java"               />
    <file name = "StateWaiter.java"                 />
    <file name = "IllegalStateTransitionException.java" />
</directory>
<directory name = "client/src/org/openamq/client/state/listener" class = "private resource">
    <file name = "ConnectionCloseOkListener.java"   />
    <file name = "SpecificMethodFrameListener.java" />
</directory>

<!-- JMS API - Transport layer -->
<directory name = "client/src/org/openamq/client/transport" class = "private resource">
    <file name = "AMQProtocolProvider.java"         />
    <file name = "TransportConnection.java"         />
</directory>

<!-- Placeholder to make Boom package the dist directory -->
<directory name = "dist">
    <file name = "readme.txt" class = "private resource" />
</directory>

<actions target = "unix">
    <generate>
        <execute>
        gsl -q -target:java amq.asl
        </execute>
    </generate>
    <build>
        <execute>
        if [ -n "`which ant`" -a -n "`which javac`" -a -n "`which jar`" ]; then
            ant -q -DIBASE=$IBASE jar || croak
        else
            echo ""
            echo "Warning: Cannot find the JDK/Ant, not building JMS/AMQ."
            #  Fake some JAR files so that "boom install" at product level does not fail.
            echo "Placeholder; not built due to missing prerequisites." > dist/openamqj-common.jar
            echo "Placeholder; not built due to missing prerequisites." > dist/openamqj-jms.jar
            echo "Placeholder; not built due to missing prerequisites." > dist/openamqj-tests.jar
        fi
        </execute>
    </build>
    <clean>
        <execute>
        if [ -n "`which ant`" ]; then
            ant -q -DIBASE=$IBASE clean || croak
        else
            echo ""
            echo "Warning: Cannot find Apache Ant, not cleaning JMS/AMQ."
        fi
        </execute>
    </clean>
</actions>
</pdl>
