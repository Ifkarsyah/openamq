<?xml version="1.0"?>

<dfl
    script      = "dfl_gen"
    name        = "amq_db"
    description = "OpenAMQ database framework layer"
    author      = "iMatix Corporation"
    target      = "bdb"
    prefix      = "db"
    >

    <rule name = "clean ids" />
    <inherit filename = "prelude.dfl" />

    <table name = "client" description = "Client">
    Defines a client who has ever used, or is still using the application.
        <field name = "id"          domain = "recordid" >Record id</field>
        <field name = "name"        domain = "shortstr" >Client external name</field>
        <field name = "connected"   domain = "boolean"  >Currently connected?</field>
        <field name = "enabled"     domain = "boolean"  >Allowed to connect?</field>
        <field name = "lastused"    domain = "timestamp">Last time connected</field>
        <index name = "byname">
            <field name = "name" />
        </index>
    </table>

    <table name = "dest" description = "Destination">
    Defines a dynamic or long-lived destination.
        <field name = "id"          domain = "recordid" >Record id</field>
        <field name = "active"      domain = "boolean"  >Currently active?</field>
        <field name = "type"        domain = "shortint" >Destination type</field>
        <field name = "name"        domain = "shortstr" >Destination name</field>
        <field name = "dynamic"     domain = "boolean"  >Dynamic destination?</field>
        <field name = "client id"   domain = "id"       >Owned by this client</field>
        <index name = "byname">
            <field name = "type" />
            <field name = "name" />
        </index>
    </table>

    <table name = "spool" description = "Spooled messages">
    The spool table registers large messages that are being uploaded but have
    not yet been saved into the mesg table.  We calculate the SHA1 signature
    of the message header block so that when a client asks if we already have
    the message, we can rapidly find it.  Note that messages are spooled on
    a per-client basis: one client cannot restart a message uploaded by
    another.
        <field name = "id"          domain = "recordid" >Record id</field>
        <field name = "client id"   domain = "id"       >Owned by this client</field>
        <field name = "signature"   domain = "shortstr" >Message header signature</field>
        <field name = "file name"   domain = "shortstr" >Message spool file name</field>
        <index name = "bysignature">
            <field name = "client id" />
            <field name = "signature" />
        </index>
    </table>
</dfl>
