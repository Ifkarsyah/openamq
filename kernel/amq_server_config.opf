<?xml?>
<!--
    The Object Property Framework
    Yet Another Production from iMatix Software Engineering.

    OPF generates classes that provide a management framework for
    object properties. A typical use is for configuration data.

  -->
<opf
    name    = "amq_server_config"
    comment = "Server configuration properties"
    script  = "opf_gen"
    >

<!-- Generate the OpenAMQ Console configuration interface -->
<plugin name = "amq_console_config" />

<public>
extern $\(selftype)
    *amq_server_config;                 //  Global properties object
</public>

<private>
$\(selftype)
    *amq_server_config = NULL;          //  Global properties
</private>

<path name = "/config/server">
    <property name = "port" type = "char *" default = "5672">
    Server port for clients
    <doc>
    Specifies the port on which the server should open its connections.
    </doc>
    </property>

    <property name = "background" type = "Bool" default = "0">
    Run as background process?
    <doc>
    Used on Unix/Linux only. If set, the server will automatically
    detatch itself from the console and move into the background when
    started from a console.  This is useful if you have to run the
    server manually.
    </doc>
    </property>

    <property name = "queue timeout" type = "int" default = "30" dynamic = "1">
    Timeout for auto-deleted queues
    <doc>
    Specifies the delay, in seconds, after which auto-deleted queues
    are effectively deleted, following disconnection of their last
    consumer.  If zero, queues are deleted immediately.
    </doc>
    </property>
</path>

<path name = "/config/resources">
    <property name = "trace" type = "int" dynamic = "1">
    Desired trace level
    <doc>
    Specifies the trace level, which can be 0 (no tracing), 1 (show
    information and protocol methods), 2 (show protocol animation),
    3 (show wire-level data).  You should not use any tracing on
    production servers except in low-volume scenarios.
    </doc>
    </property>

    <property name = "monitor" type = "int" default = "0" dynamic = "1">
    Monitor interval, seconds
    <doc>
    Specifies the interval in seconds at which the server will report
    its message rates.  If zero, no monitoring is shown. The recommended
    value is 1, if monitoring is desired.
    </doc>
    </property>

    <property name = "dump state" type = "int" default = "60" dynamic = "1">
    Dump state interval, seconds
    <doc>
    If greater than zero, specifies the interval at which the server
    will report its state to the console.  The recommended value is
    60.
    </doc>
    </property>

    <property name = "max memory mb" type = "size_t" dynamic = "1">
    Maximum allowed memory, MBytes
    <doc>
    Specifies the maximum memory allowed for the server, in MB.
    When the server reaches this limit, it will attempt to free
    resources and refuse new connections until memory has been
    made available.  If zero, no limit is used.
    </doc>
    </property>

    <property name = "recycler" type = "int" default = "60" dynamic = "1">
    Memory recycler interval, seconds
    <doc>
    If greater than zero, specifies the interval at which the server
    will recycle deallocated and cached memory.  Not all cached memory
    will be freed immediately, this happens progressively.  You can
    lower this value in scenarios where memory is very limited.
    </doc>
    </property>

    <property name = "queue limit" type = "size_t" default = "0" dynamic = "1">
    Default queue max messages
    <doc>
    Specifies the limit for queues, in messages. When a queue reaches
    this limit, messages are discarded, using a suitable heuristic.
    If zero, no limit is applied to queues.
    </doc>
    </property>
</path>

<path name = "/config/verbosity">
    <property name = "trace login" type = "Bool" dynamic = "1">
    Trace user logins?
    <doc>
    Specifies whether login attempts are traced or not.  The
    recommended setting is 1 for all servers.
    </doc>
    </property>

    <property name = "trace route" type = "Bool" dynamic = "1">
    Trace message routing?
    <doc>
    Specifies whether exchange routing is traced or not.  The
    recommended setting is 1 for development servers and zero
    otherwise.
    </doc>
    </property>

    <property name = "trace queue" type = "Bool" dynamic = "1">
    Trace queue activity?
    <doc>
    Specifies whether queue dispatching is traced or not.  The
    recommended setting is 1 for development servers and zero
    otherwise.
    </doc>
    </property>

    <property name = "trace cluster" type = "Bool" dynamic = "1">
    Trace cluster messages?
    <doc>
    Specifies whether cluster activity is traced or not.  The
    recommended setting is 1 when you are testing a cluster
    configuration and zero for production use.
    </doc>
    </property>
</path>

<path name = "/config/cluster" prefix = "cluster">
    <property name = "host" type = "char *">
    Server IP address and port
    <doc>
    Specifies the ipaddress:port to use for incoming cluster connections
    if the server runs on multiple IP addresses.  If not specified, the
    cluster will connect to this server on its first IP address.
    </doc>
    </property>

    <property name = "vhost" type = "char *" default = "">
    Cluster virtual host
    <doc>
    Specifies the cluster vhost name, which must be identical for
    all servers in a cluster.  Any string, up to 255 chars long,
    can be used.  Note that applications must use the same virtual
    host name when connecting to the cluster.
    </doc>
    </property>

    <property name = "state mb" type = "size_t" default = "250" dynamic = "1">
    Maximum cluster state, MB.
    <doc>
    Specifies the maximum amount of memory in MB reserved for the
    cluster state.  Note that this state will grow as the cluster is
    used.
    </doc>
    </property>

    <property name = "heartbeat" type = "int" default = "5" min = "1" max = "60" dynamic = "1">
    Cluster heartbeat, seconds
    <doc>
    Specifies the heartbeat interval in seconds.  Use higher heartbeat
    times only when working across a WAN where rapid heartbeats have a
    visible cost.  Faster heartbeating is generally better if the network
    can handle the traffic.
    </doc>
    </property>
</path>

<path name = "/config/tuning">
    <property name = "packio" type = "Bool" default = "0" dynamic = "1">
    Pack network writes?
    <doc>
    If set, data is packed into larger buffers before writing. This
    can improve performance significantly on some systems, especially
    Windows and Linux with 2.4 kernels. If you disable this setting,
    you should test the performance using a bulk message transfer
    test.
    </doc>
    </property>

    <property name = "read timeout" type = "int" default = "30" dynamic = "1">
    Network read timeout, seconds
    <doc>
    Defines the timeout for network reads.  If a peer does not respond
    within this time, it is considered dead.  If you get unexpected
    timeout errors in the logs, you may want to increase this value.
    </doc>
    </property>

    <property name = "write timeout" type = "int" default = "30" dynamic = "1">
    Network write timeout, seconds
    <doc>
    Defines the timeout for network writes.  If a peer does not accept
    data within this time, it is considered dead.  If you get
    unexpected timeout errors in the logs, you may want to increase
    this value.
    </doc>
    </property>

    <property name = "os threads" type = "int" default = "4">
    Max number of OS threads
    <doc>
    On multithreaded builds, defines the maximum number of OS threads that
    the server will use.  This should be at least as high as the number of
    CPUs and you can experiment with higher values.
    </doc>
    </property>

    <property name = "poll frequency" type = "int" default = "0" dynamic = "1">
    Kernel polling frequency
    <doc>
    To experiment with the effect of different socket polling strategies we
    allow the user to set the frequency of non-essential socket polling.
    Zero means no non-essential polling, one means maximal non-essential
    polling, and in general N means do non-essential polling one time in N.
    The maximum valid value for this setting is 1024.
    </doc>
    </property>
</path>

<path name = "/config/internal">
    <property name = "auto crash" type = "int" default = "0">
    Auto-crash test timer, seconds
    <doc>
    If set, the server will crash at irregular intervals, being some random
    point within the number of seconds specified.  This is used specifically
    to test applications for failover and robustness.  Set to zero for all
    real usage.
    </doc>
    </property>

    <property name = "auto block" type = "int" default = "0">
    Auto-freeze test timer, seconds
    <doc>
    If set, the server will block at irregular intervals, being some random
    point within the number of seconds specified.  This is used specifically
    to test applications for failover and robustness.  Set to zero for all
    real usage.
    </doc>
    </property>

    <property name = "kernel limit" type = "int" default = "0">
    SMT kernel limit
    <doc>
    Sets an action limit for the SMT kernel: after this many steps it will
    exit.  Use this to break the server for failure testing.  Set to zero for
    all real usage.
    </doc>
    </property>
</path>

</opf>
